# Copyright (C) 2006-2007 Anders Logg
#
# This file is part of DOLFIN.
#
# DOLFIN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DOLFIN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with DOLFIN. If not, see <http://www.gnu.org/licenses/>.
#
# First added:  2006-02-09
# Last changed: 2011-03-09
#
# The bilinear form a(u, v) and linear form L(v) for
# convection-diffusion using cG(1)cG(1).
#
# Compile this form with FFC: ffc -l dolfin AdvectionDiffusion.ufl

from ufl_legacy import (Coefficient, dx, FiniteElement, VectorElement,
                 dot, grad,
                 triangle, TestFunction, TrialFunction)

scalar = FiniteElement("Lagrange", triangle, 1)
vector = VectorElement("Lagrange", triangle, 2)

u = TrialFunction(scalar)
v  = TestFunction(scalar)
u0 = Coefficient(scalar)
b  = Coefficient(vector)
f  = Coefficient(scalar)

c = 0.005
k = 0.05

a = u*v*dx + 0.5*k*(dot(b, grad(u)*v)*dx + c*dot(grad(u), grad(v))*dx)
L = u0*v*dx - 0.5*k*(dot(b, grad(u0)*v)*dx + c*dot( grad(u0), grad(v))*dx) \
    + k*f*v*dx
