from ufl_legacy import (dx, VectorElement,
                 Identity, inner, grad, tr,
                 tetrahedron, TestFunction, TrialFunction)

element = VectorElement("Lagrange", tetrahedron, 1)

v = TestFunction(element)
u = TrialFunction(element)

E  = 10.0
nu = 0.3

mu    = E / (2*(1 + nu))
lmbda = E*nu / ((1 + nu)*(1 - 2*nu))

def epsilon(v):
    return 0.5*(grad(v) + (grad(v)).T)

def sigma(v):
    return 2*mu*epsilon(v) + lmbda*tr(epsilon(v))*Identity(len(v))

a = inner(grad(v), sigma(u))*dx
